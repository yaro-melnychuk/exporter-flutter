import 'package:resilience_design_system_flutter/src/app_dimensions_extension.dart';

{[ let brand = ds.currentBrand() /]}
{[ const measureTokensTree = ds.tokenGroupTreeByType("Measure", brand.id) /]}
/// Abstract base class that defines the dimensions contract for all themes
/// Any theme implementation should extend this class and provide concrete dimension values
abstract class BaseThemeDimensions {
  const BaseThemeDimensions();

{[ traverse measureTokensTree property subgroups into measureTokenGroup ]}
  {[ let fullTokenGroupPath = createFullTokenGroupPath(measureTokenGroup) /]}
  {[ const measureTokenInGroups = ds.tokensByGroupId(measureTokenGroup.id) /]}
  {[ if (measureTokenInGroups.length > 0) ]}
  // {{ measureTokenGroup.name }} dimensions
  {[/]}
  {[ for measureToken in measureTokenInGroups ]}
  {[ const fullTokenPath = arrayConcat(fullTokenGroupPath, measureToken.name) /]}
  {[ const fullTokenName = arrayJoin(fullTokenPath, " ").camelcased(false) /]}
  {[ if (measureToken.description && measureToken.description !== "") ]}
{{ createDocumentationComment(measureToken.description, "  ") }}
  {[/]}
  double get {{ fullTokenName }};
  {[/]}
{[/]}

  AppDimensionsExtension toAppDimensionsExtension() => AppDimensionsExtension(
{[ traverse measureTokensTree property subgroups into measureTokenGroup ]}
  {[ let fullTokenGroupPath = createFullTokenGroupPath(measureTokenGroup) /]}
  {[ const measureTokenInGroups = ds.tokensByGroupId(measureTokenGroup.id) /]}
  {[ if (measureTokenInGroups.length > 0) ]}
    // {{ measureTokenGroup.name }} dimensions
  {[/]}
  {[ for measureToken in measureTokenInGroups ]}
    {[ const fullTokenPath = arrayConcat(fullTokenGroupPath, measureToken.name) /]}
    {[ const fullTokenName = arrayJoin(fullTokenPath, " ").camelcased(false) /]}
    {{ fullTokenName }}: {{ fullTokenName }},
  {[/]}
{[/]}
  );
}