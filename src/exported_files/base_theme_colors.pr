import 'package:flutter/material.dart';
import 'package:resilience_design_system_flutter/src/app_colors_extension.dart';

{[ let brand = ds.currentBrand() /]}
{[ const colorTokensTree = ds.tokenGroupTreeByType("Color", brand.id) /]}
/// Abstract base class that defines the color contract for all themes
/// Any theme implementation should extend this class and provide concrete color values
abstract class BaseThemeColors {
  const BaseThemeColors();
  
{[ traverse colorTokensTree property subgroups into colorTokenGroup ]}
  {[ let fullTokenGroupPath = createFullTokenGroupPath(colorTokenGroup) /]}
  {[ const colorTokenInGroups = ds.tokensByGroupId(colorTokenGroup.id) /]}
  {[ if (colorTokenInGroups.length > 0) ]}
  // {{ colorTokenGroup.name }} colors
  {[/]}
  {[ for colorToken in colorTokenInGroups ]}
  {[ const fullTokenPath = arrayConcat(fullTokenGroupPath, colorToken.name) /]}
  {[ const fullTokenName = arrayJoin(fullTokenPath, " ").camelcased(false) /]}
  {[ if (colorToken.description && colorToken.description !== "") ]}
{{ createDocumentationComment(colorToken.description, "  ") }}
  {[/]}
  Color get {{ fullTokenName }};
  {[/]}
{[/]}

  AppColorsExtension toAppColorsExtension() => AppColorsExtension(
{[ traverse colorTokensTree property subgroups into colorTokenGroup ]}
  {[ let fullTokenGroupPath = createFullTokenGroupPath(colorTokenGroup) /]}
  {[ const colorTokenInGroups = ds.tokensByGroupId(colorTokenGroup.id) /]}
  {[ if (colorTokenInGroups.length > 0) ]}
    // {{ colorTokenGroup.name }} colors
  {[/]}
  {[ for colorToken in colorTokenInGroups ]}
    {[ const fullTokenPath = arrayConcat(fullTokenGroupPath, colorToken.name) /]}
    {[ const fullTokenName = arrayJoin(fullTokenPath, " ").camelcased(false) /]}
    {{ fullTokenName }}: {{ fullTokenName }},
  {[/]}
{[/]}
  );
}